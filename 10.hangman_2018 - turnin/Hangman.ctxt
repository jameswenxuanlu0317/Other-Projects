#BlueJ class context
comment0.target=Hangman
comment0.text=\r\n\ Hangman\ game,\ try\ to\ guess\ right\ the\ word\ by\ input\ 1\ letter\ each\ \r\n\ times.\ You\ have\ a\ maximum\ of\ 6\ time\ to\ guess\ the\ letters\ wrong.\ You\r\n\ win\ if\ you\ guess\ right\ all\ the\ letters\ in\ the\ word.\ More\ informations\r\n\ on\ the\ comments\ in\ playHangman()\ method.\r\n\ @Author\ Lu\r\n\ \r\n
comment1.params=
comment1.target=void\ setup()
comment1.text=\r\n\ This\ is\ the\ setup\ of\ the\ program.\ Start\ with\ underscores\ with\r\n\ the\ length\ equals\ to\ the\ word.\r\n\ You\ failed\ 0\ times.\r\n
comment10.params=
comment10.target=void\ getGuess()
comment10.text=\r\n\ this\ displays\ the\ dialogue\ box\ and\ ask\ the\ player\ to\ enter\ the\r\n\ letter\ they\ wanted\ to\ guess.\r\n
comment11.params=
comment11.target=void\ playHangman()
comment11.text=\r\n\ This\ is\ the\ method\ that\ runs\ the\ whole\ hangman\ project.\r\n\ It\ runs\ the\ setup\ first,\ which\ cleans\ everything\ on\ display\ and\r\n\ ready\ to\ start\ a\ new\ game.\ If\ the\ game\ did\ not\ finish,\ it\ will\r\n\ run\ the\ JOptionPane\ to\ ask\ the\ player\ to\ enter\ a\ letter.\ If\ the\r\n\ guess\ is\ valid(that\ means\ it's\ a\ single\ letter,\ and\ only\ have\ \r\n\ been\ guessed\ once).\r\n\ Then\ the\ program\ checks\ the\ guessed\ letter,\ it\ goes\ to\ the\ success\r\n\ method\ if\ guessed\ right\ the\ letter,\ it\ goes\ to\ the\ fail\ method\r\n\ if\ not.\ Game\ will\ end\ after\ everything\ had\ been\ guessed\ or\ the\r\n\ player\ failed\ 6\ times.\ \r\n\ Another\ dialogue\ box\ would\ pop\ up,\ click\ ok\ to\ restart\ the\ game.\r\n
comment2.params=
comment2.target=java.lang.String\ wordbank()
comment2.text=\r\n\ This\ is\ the\ method\ that\ randomize\ the\ words\ on\ the\ screen.\ It\ \r\n\ also\ stores\ as\ a\ string\ of\ all\ the\ words\ in\ it.\r\n
comment3.params=
comment3.target=boolean\ done()
comment3.text=\r\n\ this\ is\ a\ boolean\ method\ that\ checks\ if\ the\ game\ is\ finished\ \r\n\ or\ not.\ The\ game\ is\ done\ if\ the\ player\ guessed\ right\ all\ the\ \r\n\ letters\ or\ failed\ 6\ times.\r\n
comment4.params=
comment4.target=void\ checkWin()
comment4.text=\r\n\ this\ is\ the\ method\ that\ checks\ if\ the\ player\ guessed\ right\ all\ the\r\n\ letters.\r\n
comment5.params=
comment5.target=void\ inGuessed()
comment5.text=\r\n\ this\ is\ the\ method\ that\ limits\ the\ players\ to\ only\ type\ in\ 1\ \r\n\ single\ letter\ and\ only\ enter\ the\ same\ letter\ once\r\n
comment6.params=
comment6.target=boolean\ checkGuess()
comment6.text=\r\n\ this\ is\ the\ method\ that\ checks\ that\ if\ the\ guessed\ letter\ is\ \r\n\ part\ of\ the\ word.\r\n
comment7.params=
comment7.target=void\ humanGraphics()
comment7.text=\r\n\ this\ is\ the\ method\ of\ graphics\ if\ the\ guess\ failed.\ Graphics\r\n\ change\ each\ time.\r\n
comment8.params=
comment8.target=void\ success()
comment8.text=\r\n\ this\ is\ the\ method\ after\ the\ guess\ was\ confirmed\ to\ be\ part\ of\r\n\ the\ word.\ It\ prints\ out\ the\ letter\ with\ the\ underscores\ at\ the\r\ncorrect\ position.\r\n
comment9.params=
comment9.target=void\ fail()
comment9.text=\r\n\ this\ is\ the\ method\ after\ the\ guess\ was\ confirmed\ not\ being\ part\r\n\ of\ the\ word.\ It\ prints\ out\ the\ graphics.\r\n
numComments=12
