#BlueJ class context
comment0.target=Example
comment0.text=\r\n\ This\ is\ an\ Example\ class\ that\ codes\ for\ the\ game\ of\ snakes\ and\ treasures\r\n\ Randomly\ placing\ snakes\ and\ treasures\ on\ the\ map\r\n\ if\ player\ digs\ up\ a\ treasure,\ they\ earn\ one\ point\r\n\ if\ player\ digs\ up\ a\ snake,\ they\ get\ a\ warning\r\n\ if\ player\ digs\ up\ a\ second\ snake,\ their\ score\ resets\ to\ zero\r\n\ player\ can\ skip\ their\ turns\r\n\ the\ round\ ends\ if\ each\ player\ skips\ their\ turn\r\n\ the\ round\ also\ ends\ if\ everything\ was\ dug\ up\r\n\ new\ round\ adds\ one\ more\ snake\ to\ the\ map,\ level\ of\ difficulties\ increases\r\n\ first\ player\ that\ reaches\ the\ win\ points\ wins\r\n\ players\ can\ choose\ whether\ they\ want\ to\ restart\ the\ game\ or\ not\r\n\ \r\n\ @author\ Lu\r\n\ @version\ 10000000000000\r\n
comment1.params=
comment1.target=Example()
comment1.text=\r\n\ Constructor,\ constructs\ the\ world\ with\ the\ number\ of\ columns\ and\ rows\ with\ the\ constant\ cell\ size\r\n
comment10.params=x
comment10.target=void\ makeTreasure(int)
comment10.text=\ \ \ \ \ \r\n\ randomly\ making\ treasures\ based\ on\ the\ number\ given\ in\ the\ parameter\r\n\ if\ the\ position\ is\ already\ being\ used,\ re-randomize\ the\ position\ of\ treasures\r\n\ adding\ the\ treasure\ constant\ value\ to\ the\ 2-D\ array\r\n
comment11.params=
comment11.target=void\ constructWorld()
comment11.text=\r\n\ constructing\ the\ game\r\n\ asking\ how\ many\ snakes\ and\ powerups\ the\ player\ wants\r\n\ making\ snakes,\ powerups,\ treasures\ based\ on\ the\ number\ the\ player\ is\ giving\r\n\ import\ the\ image\ to\ the\ background\r\n\ draws\ the\ player\ score,\ players\ turn,\ skip\ icon,\ difficulty\r\n
comment12.params=
comment12.target=void\ drawLastColumn()
comment12.text=\r\n\ clears\ the\ last\ column\ of\ the\ world\ by\ drawing\ white\ squares\r\n
comment13.params=row\ column
comment13.target=boolean\ checkSnake(int,\ int)
comment13.text=\r\n\ returns\ true\ if\ it\ finds\ a\ snake\ at\ a\ given\ position\ of\ the\ 2-D\ array\r\n\ otherwise\ returns\ false\r\n
comment14.params=row\ column
comment14.target=boolean\ checkTreasure(int,\ int)
comment14.text=\r\n\ returns\ true\ if\ it\ finds\ a\ treasure\ at\ a\ given\ position\ in\ the\ 2-D\ array,\ otherwise\ returns\ false\r\n
comment15.params=row\ column
comment15.target=boolean\ checkPowerUp(int,\ int)
comment15.text=\r\n\ returns\ true\ if\ it\ finds\ a\ snake\ at\ a\ given\ position\ of\ the\ 2-D\ array\r\n\ otherwise\ returns\ false\r\n
comment16.params=row\ column
comment16.target=boolean\ checkClicked(int,\ int)
comment16.text=\r\n\ returns\ true\ if\ the\ row\ and\ column\ had\ already\ been\ clicked,\ using\ constant\ FOUND\r\n
comment17.params=
comment17.target=void\ snakeTurn()
comment17.text=\r\n\ each\ player\ can't\ find\ more\ than\ one\ snakes,\ otherwise\ score\ goes\ back\ to\ zero\r\n\ if\ found\ a\ snake,\ number\ of\ snakes\ that\ player\ found\ is\ added\r\n
comment18.params=
comment18.target=void\ clearSnake()
comment18.text=\r\n\ clears\ the\ number\ snakes\ for\ each\ player\r\n
comment19.params=
comment19.target=void\ treasureTurn()
comment19.text=\r\n\ score\ is\ added\ in\ the\ 2-D\ array\ if\ player\ has\ dug\ up\ a\ treasure\r\n\ draws\ the\ score\ of\ the\ player,\ moving\ on\ to\ the\ next\ player\r\n
comment2.params=
comment2.target=void\ drawInitial()
comment2.text=\r\n\ At\ the\ start\ of\ the\ game,\ it\ draws\ the\ player\ score\ in\ the\ last\ row\r\n
comment20.params=
comment20.target=void\ powerTurn()
comment20.text=\r\n\ score\ is\ added\ by\ 5\ when\ the\ powerup\ has\ been\ dug\ by\ the\ player,\ using\ constant\ represent\ the\ score\ of\ the\ power\r\n\ draws\ the\ score\ of\ the\ player,\ moves\ on\ to\ the\ next\ player\r\n
comment21.params=
comment21.target=void\ skipTurn()
comment21.text=\r\n\ allow\ players\ to\ skip\ their\ turn\r\n\ prints\ out\ the\ message\ about\ which\ player\ skipped\ their\ turn\r\n\ if\ all\ players\ skipped\ their\ turns,\ next\ round\ is\ started\r\n
comment22.params=
comment22.target=void\ showSkip()
comment22.text=\r\n\ prints\ out\ the\ message\ about\ which\ player\ skipped\ their\ turn\r\n
comment23.params=
comment23.target=boolean\ checkNew()
comment23.text=\r\n\ shows\ the\ option\ of\ whether\ the\ player\ wants\ to\ restart\ the\ game\ or\ not.\ \r\n\ returns\ true\ if\ the\ player\ wants\ to\ skip\ their\ turns,\ other\ wise\ return\ false\r\n
comment24.params=
comment24.target=void\ ifWin()
comment24.text=\r\nif\ one\ player\ wins,\ plays\ the\ music,\ reset\ all\ the\ variables\r\nallows\ player\ to\ choose\ whether\ they\ wants\ to\ restart\ a\ new\ game\r\nreset\ all\ the\ values\ in\ the\ 2-D\ arrays\r\nif\ player\ doesn't\ want\ to\ restart,\ end\ the\ game\r\n
comment25.params=
comment25.target=void\ act()
comment25.text=\r\n\ the\ game.\r\n\ construct\ the\ world,\ prints\ out\ the\ number\ of\ snakes\ left,\ difficulty,\ which\ player's\ turn\ and\ win\ score\ on\ the\ screen\r\n\ check\ if\ wins\ at\ multiple\ situations\r\n\ check\ if\ the\ round\ is\ finished\r\n\ reset\ variables\ if\ the\ player\ wins\ or\ finised\ the\ round\r\n\ draw\ snakes,\ treasures,\ powers\ accordingly\ if\ player\ dug\ up\ \r\n\ does\ not\ allow\ players\ to\ click\ at\ one\ place\ more\ than\ once\r\n
comment26.params=
comment26.target=void\ snakeMusic()
comment26.text=\r\n\ plays\ a\ certain\ music\ if\ the\ player\ dug\ up\ the\ snake\r\n
comment27.params=
comment27.target=void\ treasureMusic()
comment27.text=\r\n\ plays\ a\ certain\ music\ if\ the\ player\ dug\ up\ the\ treasure\r\n
comment28.params=
comment28.target=void\ powerMusic()
comment28.text=\r\n\ plays\ a\ certain\ music\ if\ the\ player\ dug\ up\ the\ powerups\r\n
comment29.params=
comment29.target=boolean\ tieScore()
comment29.text=\r\n\ returns\ true\ if\ the\ score\ is\ tied\ among\ the\ players\r\n\ otherwise\ returns\ false;\r\n
comment3.params=
comment3.target=void\ snakesLeft()
comment3.text=\r\n\ Draws\ the\ number\ of\ snakes\ left\ in\ the\ second\ cell\ of\ the\ last\ column\r\n
comment30.params=
comment30.target=int\ highPlayer()
comment30.text=\r\n\ returns\ the\ player\ with\ the\ higher\ score\r\n
comment31.params=
comment31.target=void\ Reset()
comment31.text=\r\n\ reset\ the\ variables\ in\ the\ world\ 2-D\ array\r\n\ clears\ the\ board\r\n\ redraw\ the\ score\ of\ the\ players\r\n
comment32.params=
comment32.target=void\ drawScore()
comment32.text=\r\n\ draws\ the\ scores\ of\ the\ player\r\n
comment33.params=
comment33.target=boolean\ checkRound()
comment33.text=\r\n\ returns\ true\ if\ the\ players\ dug\ up\ everything\ or\ every\ players\ skipped\ their\ turns\r\n\ otherwise\ returns\ false\r\n
comment34.params=
comment34.target=java.lang.String\ getScores()
comment34.text=\r\n\ return\ the\ score\ of\ the\ game\r\n
comment35.params=x
comment35.target=boolean\ checkInt(java.lang.String)
comment35.text=\r\n\ check\ if\ the\ string\ is\ an\ integer\r\n
comment36.params=
comment36.target=boolean\ checkWin()
comment36.text=\r\n\ check\ if\ the\ score\ exceeds\ the\ win\ points\ constant,\ return\ true\ if\ it\ is\r\n
comment37.params=
comment37.target=void\ drawLastRow()
comment37.text=\r\n\ clear\ the\ last\ row\ of\ the\ cell\ by\ drawing\ white\ squares\r\n
comment38.params=row\ col\ str
comment38.target=void\ drawText(int,\ int,\ java.lang.String)
comment38.text=\r\n\ Draw\ text\ in\ a\ given\ cell\r\n
comment39.params=row\ col\ color
comment39.target=void\ drawSquare(int,\ int,\ greenfoot.Color)
comment39.text=\r\n\ Draws\ a\ colored\ square\r\n
comment4.params=
comment4.target=void\ Difficulty()
comment4.text=\r\n\ Draws\ the\ level\ of\ difficulty\ in\ the\ fourth\ cell\ of\ the\ last\ column\r\n
comment40.params=row\ col
comment40.target=void\ drawSnakes(int,\ int)
comment40.text=\r\n\ Draws\ a\ picture\ of\ a\ snake\r\n
comment41.params=row\ col
comment41.target=void\ drawTreasure(int,\ int)
comment41.text=\r\n\ Draws\ a\ picture\ of\ treasure\r\n
comment42.params=row\ col
comment42.target=void\ drawPower(int,\ int)
comment42.text=\r\n\ Draws\ a\ picture\ of\ treasure\r\n
comment43.params=row\ col
comment43.target=void\ drawSkip(int,\ int)
comment43.text=\r\n\ Draws\ a\ picture\ of\ treasure\r\n
comment5.params=
comment5.target=void\ playerTurn()
comment5.text=\r\n\ Draws\ which\ player's\ turn\ in\ the\ third\ cell\ of\ the\ last\ column\r\n
comment6.params=
comment6.target=void\ winScore()
comment6.text=\r\n\ draws\ the\ win\ score\ in\ the\ 5th\ cell\ of\ the\ last\ column\r\n
comment7.params=
comment7.target=void\ clearWorld()
comment7.text=\r\n\ Clears\ the\ world\ by\ resetting\ all\ the\ values\ 0\ in\ the\ 2-D\ array\ that\ stores\ all\ the\ values\ of\ snakes,\ treasures,\ and\ power-ups\r\n\ cleaning\ the\ background\ by\ drawing\ white\ squares\ to\ clear\ the\ background\r\n
comment8.params=x
comment8.target=void\ makePower(int)
comment8.text=\r\n\ randomly\ making\ power\ ups\ based\ on\ the\ number\ given\ in\ the\ parameter\r\n\ if\ the\ position\ is\ already\ being\ used,\ re-randomize\ the\ position\ of\ powerups\r\n\ adding\ the\ power\ constant\ value\ to\ the\ 2-D\ array\r\n
comment9.params=x
comment9.target=void\ makeSnake(int)
comment9.text=\r\n\ randomly\ making\ snakes\ based\ on\ the\ number\ given\ in\ the\ parameter\r\n\ if\ the\ position\ is\ already\ being\ used,\ re-randomize\ the\ position\ of\ snakes\r\n\ adding\ the\ snakes\ constant\ value\ to\ the\ 2-D\ array\r\n
numComments=44
